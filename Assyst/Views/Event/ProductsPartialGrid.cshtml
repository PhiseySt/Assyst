@using DevExpress.AspNetCore
@using DevExpress.Data
@model IEnumerable<ProductItem>

@(Html.DevExpress().BootstrapGridView<ProductItem>("grid")
        .Routes(routes => routes
            .MapRoute(r => r
                .Action("ProductsPartialGrid")
                .Controller("Event")))
        .ClientSideEvents(events =>
        {
            events.BeginCallback("grid_BeginCallback");
            events.EndCallback("grid_EndCallback");
            events.RowDblClick("grid_RowDblClick");
        })
        .SettingsBehavior(s =>
        {
            s.AllowFocusedRow(true);
            s.AllowSelectByRowClick(true);
            s.AllowSelectSingleRowOnly(true);
            s.AllowEllipsisInText(true);
            s.AllowSort(true);
            s.ProcessFocusedRowChangedOnServer(false);
            s.ProcessSelectionChangedOnServer(false);
        })
        .SettingsLoadingPanel(s => s.Mode(GridViewLoadingPanelMode.ShowAsPopup))
        .SettingsBootstrap(settings => settings.Striped(true))
        .SettingsPager(s => s.PageSize(1000))
        .Columns(columns =>
        {
            columns.Add(m => m.id).Caption("Id").HorizontalAlign(HorizontalAlign.Left).Visible(false);
            columns.Add(m => m.name).Caption("Название").HorizontalAlign(HorizontalAlign.Left).SortIndex(0).Visible(true);
            columns.Add(m => m.shortCode).Caption("Код").HorizontalAlign(HorizontalAlign.Left).Visible(true);
            columns.Add(m => m.productClass.name).Caption("Класс продукта").HorizontalAlign(HorizontalAlign.Left).Visible(true);
        })
        .KeyFieldName("id", "name")
        .Settings(settings => settings
            .ShowFilterRow(true)
            .ShowFilterRowMenu(true)
        )
        .SettingsLoadingPanel(s => s.Mode(GridViewLoadingPanelMode.ShowAsPopup))
         .OnBeforeRender((grid, args) =>
         {
             grid.JSProperties["cpResult"] = ViewData["result"];
         })
        .Bind(Model)
)

